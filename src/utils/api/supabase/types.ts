import { Database } from '../../../types/supabase';

export type AddressesDatabase = Database['public']['Tables']['addresses']['Row'];
export type LoadsDatabase = Database['public']['Tables']['loads']['Row'];
export type UserDatabase = Database['public']['Tables']['users']['Row'];
export type CompanyDatabase = Database['public']['Tables']['companies']['Row'];
export type AcceptedLoadDatabase = Database['public']['Tables']['accepted_loads']['Row'];
export type InsertAcceptedLoad = Database['public']['Tables']['accepted_loads']['Insert'];
export type InsertVehicle = Database['public']['Tables']['vehicles']['Insert'];
export type InsertInvoice = Database['public']['Tables']['invoices']['Insert'];
export type UserDatabaseWithComp = {
  avatar: string;
  company_vat_id: CompanyDatabase;
  email: string;
  id: string;
  name: string;
  surname: string;
};
// export type UserDatabaseWithComp = UserDatabase & {
//   company_vat_id: CompanyDatabase;
// };
export type Addresses = Omit<AddressesDatabase, 'id'>;

type Vehicles = {
  [key: string]: boolean;
};

export type GetLoadsData = {
  created_at: string;
  currency: string;
  id: string;
  length: number;
  loading_address_id: AddressesDatabase;
  loading_date: string;
  price: number;
  term: string;
  unloading_address_id: AddressesDatabase;
  unloading_date: string;
  user_id: UserDatabaseWithComp;
  vehicle_types: Vehicles;
  weight: number;
};
export type GetLoadsDataWithId = {
  created_at: string;
  currency: string;
  id: string;
  length: number;
  loading_address_id: AddressesDatabase;
  loading_date: string;
  price: number;
  term: string;
  unloading_address_id: AddressesDatabase;
  unloading_date: string;
  user_id: string;
  vehicle_types: Vehicles;
  weight: number;
};
export type GetAcceptedLoadsData = {
  accepted_by: UserDatabaseWithComp;
  created_at: string;
  currency: string;
  id: string;
  invoice_id: string | null;
  length: number;
  loading_address_id: AddressesDatabase;
  loading_date: string;
  price: number;
  term: string;
  unloading_address_id: AddressesDatabase;
  unloading_date: string;
  user_id: UserDatabaseWithComp;
  vehicle_id: string | null;
  vehicle_types: Vehicles;
  weight: number;
};
export type AddLoadData = {
  currency: string;
  length?: number;
  loadingAddress: string;
  loadingAddressData: Addresses;
  loadingDate: string;
  price: number;
  term: string;
  unloadingAddress: string;
  unloadingAddressData: Addresses;
  unloadingDate: string;
  userId: string;
  vehicles: Vehicles;
  weight?: number;
};
export type LoadsData = {
  company: CompanyDatabase;
  created_at: string;
  currency: string;
  id: string;
  length: number;
  loading_address_id: AddressesDatabase;
  loading_date: string;
  price: number;
  term: string;
  unloading_address_id: AddressesDatabase;
  unloading_date: string;
  user_id: UserDatabaseWithComp;
  vehicle_types: Vehicles;
  weight: number;
};
export type Load = {
  cargoLength: number;
  cargoWeight: number;
  company: CompanyDatabase;
  createdAt: string;
  currency: string;
  id: string;
  loadingAddress: AddressesDatabase;
  loadingDate: string;
  paymentTerm: string;
  price: number;
  unloadingAddress: AddressesDatabase;
  unloadingDate: string;
  user: UserDatabase;
  vehicleTypes: Vehicles;
};
export type AcceptedLoad = {
  cargoLength: number;
  cargoWeight: number;
  company: CompanyDatabase;
  createdAt: string;
  currency: string;
  id: string;
  loadingAddress: AddressesDatabase;
  loadingDate: string;
  paymentTerm: string;
  price: number;
  unloadingAddress: AddressesDatabase;
  unloadingDate: string;
  user: UserDatabase;
  vehicleId: string | null;
  vehicleTypes: Vehicles;
};
export type GetCompaniesData = {
  accepted_by: UserDatabaseWithComp;
  created_at: string;
  currency: string;
  id: string;
  length: number;
  loading_address_id: AddressesDatabase;
  loading_date: string;
  price: number;
  term: string;
  unloading_address_id: AddressesDatabase;
  unloading_date: string;
  user_id: UserDatabaseWithComp;
  vehicle_id: string | null;
  vehicle_types: Vehicles;
  weight: number;
};
export type GetInvoicesDatabase = {
  additional_informations: string;
  cost: number;
  currency: string;
  date: string;
  end_date: string;
  id: number;
  payment_term: string;
  recipient_id: UserDatabaseWithComp;
  seller_id: UserDatabaseWithComp;
};

export type GetInvoices = {
  additionalInformations: string;
  cost: number;
  currency: string;
  date: string;
  endDate: string;
  id: number;
  paymentTerm: string;
  recipient: UserDatabaseWithComp;
  seller: UserDatabaseWithComp;
};
export type CompanyOrdersData = {
  createdAt: string;
  currency: string;
  id: string;
  loadingCity: string | null;
  loadingCountry: string;
  paymentTerm: string;
  price: number;
  recipient: string;
  seller: string;
  unloadingCity: string | null;
  unloadingCountry: string;
  vehicleId: string | null;
};
